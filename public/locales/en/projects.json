{
  "see-website": "See website",
  "techs": "Technologies",
  "features": "Features",
  "about-project": "About project",
  "projects": [
    {
      "project-name": "HealthyGo",
      "github-link": "https://github.com/guiwustro/healthy-go-project",
      "project-url": "https://healthygo.vercel.app/home/",
      "description": "The application allows the user to place an order from several restaurants, being able to filter restaurants according to their dietary restrictions until finalizing their order.",
      "about-project": [
        "Eating well is knowing how to make good choices and Healthygo's mission is to help you in this important decision! The project was inspired with the objective of making life easier for people with dietary restrictions: those with lactose intolerance, gluten, vegetarians and vegans.",
        "The application allows the user to place an order from several restaurants that fit these restrictions. In addition to having filters, to facilitate the user, being able to choose which restaurants have this food category."
      ],
      "techs": [
        "React",
        "TypeScript",
        "Axios",
        "ContextAPI",
        "Styled Components",
        "React Router DOM",
        "Hot-Toastify",
        "Framer motion",
        "react-google-auth",
        "react-input-mask"
      ],
      "features": [
        "Home page with sample API restaurants, for logged out users;",
        "Login page, where the user can log in with Google credentials;",
        "User Registration Page;",
        "It is not possible to add products to the offline cart, feedback is sent to the user when he tries to add products to the offline cart, indicating the Login;",
        "Logged in user can edit profile, having their information saved in the API, in addition to adding addresses and removing them;",
        "User has the option to get the address through the current location, the data is taken from the Geolocation/DB API;",
        "Logged in user can add products to cart through restaurants, being able to add products from different restaurants. Shipping is calculated at a fixed rate per restaurant;",
        "Logged in user can manipulate their cart (adding, decreasing and removing products) through the cart itself;",
        "Logged-in user can finalize their order, redirecting to the CheckOut page, where there are fields for the Debit/Credit Card registration, in addition to the summary of the user's order;",
        "After filling in the card details and selecting an Address, and clicking on the Finish Order button, the user is notified with a Success message and the cart is emptied",
        "Feedback to the user (error notifications) if any information is missing to be filled in at checkout;",
        "The user's cart is saved in the API, that is, while the user, that is, the cart will be there until the products are removed or the user finishes the order;",
        "Page with user requests;",
        "Responsive for all screens between 320px and 4k;",
        " Dark-Mode;"
      ],
      "images": []
    },
    {
      "project-name": "Kenzie Hub",
      "github-link": "https://github.com/guiwustro/kenzie-hub",
      "project-url": "https://kenzie-hub-guiwustro.vercel.app/",
      "description": "It is an application developed for the user to manage the technologies learned and the projects created.",
      "about-project": [
        "It is an application developed for the user to manage the technologies learned, choosing the level of understanding of the technology (basic, intermediate or advanced). In addition to adding new technologies to the platform, the user is able to edit and remove technologies.",
        "The application also has a Login and Registration page for new users, having their data saved in an API."
      ],
      "techs": [
        "React",
        "TypeScript",
        "Axios",
        "ContextAPI",
        "Styled Components",
        "React Router DOM",
        "Toastify",
        "Framer motion"
      ],
      "features": [
        "Page for the user to create an account;",
        "Data validation when registering, the password has minimum requirements to be created and all fields are mandatory. All this is notified by the application when creating a new account;",
        "User feedback notifications when creating an account, logging in, creating, changing or removing new technologies and projects;",
        "User login on the platform, checking if the user is already registered;",
        "The user is able to insert new technologies and new projects;",
        "The user is able to change and remove existing technologies and designs;",
        "Responsive for all screens."
      ],
      "images": [
        "../../../src/assets/images/projects/kenzie-hub/Home-tela-grande.png",
        "../../../src/assets/images/projects/kenzie-hub/Login-1440px.png",
        "../../../src/assets/images/projects/kenzie-hub/Register-1440px.png",
        "../../../src/assets/images/projects/kenzie-hub/mobile-montage.JPG"
      ]
    },
    {
      "project-name": "Hamburgueria da Kenzie",
      "github-link": "https://github.com/guiwustro/kenzie-burguer",
      "project-url": "https://hamburgueria-kenzie-guiwustro.vercel.app/",
      "description": "It is a single-page e-commerce application, which has a showcase with products with add-to-cart buttons, a shopping cart and a filter bar, a search field.",
      "about-project": [
        "The application has a dark theme in addition to the light theme, for the user to choose, and the theme is saved on the user's page, that is, if the user selects the dark mode, the next time he connects to the page it will continue to be this one. mode.",
        "The shopping cart is only visible to the user when a product is added to the cart. Within it, the user is able to increase, decrease the quantity of the product through the + and - buttons or remove the product. The customer is automatically calculated from the cart with each addition, decrease or removal of a product."
      ],
      "techs": ["React", "CSS", "Axios", "Styled Components", "ContextAPI"],
      "features": [
        "Showcase with e-commerce products;",
        " Button with the option to add to cart on each e-commerce product;",
        " Functional search field to search by category or product name;",
        "Option to increase, decrease quantity and remove by shopping cart;",
        " Shopping cart total calculation;",
        "Option to remove all products from cart;",
        " Responsive for any screen;",
        "Dark mode."
      ],
      "images": [
        "../../../src/assets/images/projects/kenzie-burguer/HomePage-LightTheme-EmptyCart.jpg",
        "../../../src/assets/images/projects/kenzie-burguer/HomePage-DarkTheme-EmptyCart.jpg",
        "../../../src/assets/images/projects/kenzie-burguer/HomePage-LightTheme.jpg",
        "../../../src/assets/images/projects/kenzie-burguer/HomePage-DarkTheme.jpg"
      ]
    },
    {
      "project-name": "Nu Kenzie",
      "github-link": "https://github.com/guiwustro/nu-kenzie",
      "project-url": "https://nu-kenzie-guiwustro.vercel.app/",
      "description": "It is an expense control platform, where it is possible to register a description, an amount and the type of that amount (input or output).",
      "about-project": [
        "It is an expense control platform, where it is possible to register a description, an amount and the type of that amount (input or output).",
        "The user is able to filter their expenses and entries, and the total amount is dynamically calculated according to the selected filter."
      ],
      "techs": ["React", "Axios", "Context API"],
      "features": [
        "Form for the user to register a new input/output;",
        "Input and expense filter;",
        "Dynamic calculation of the total amount according to what is being filtered (all, entries or expenses);",
        "Option to remove input/expense entered;",
        "Responsive for all screens;",
        "Dark-mode;"
      ],
      "images": [
        "../../../src/assets/images/projects/nu-kenzie/main-page-1440px-light-mode.png",
        "../../../src/assets/images/projects/nu-kenzie/home-page-1440px.png",
        "../../../src/assets/images/projects/nu-kenzie/main-page-1440px.png"
      ]
    },
    {
      "project-name": "Blog",
      "github-link": "https://github.com/guiwustro/blog",
      "project-url": "https://guiwustro.github.io/blog/",
      "description": "The idea of this project is to simulate a community, where all registered members can consume, create, update and delete text publications. It was developed using Object Oriented Programming.",
      "about-project": [
        "The project has 3 pages, one for registration, another for login and finally, the main page, where you can create, edit and delete messages.",
        "On the registration page, the user is able to register if he fills in the fields correctly, if a field is not filled in correctly, an error is triggered to the user. Soon after the registration, the user is directed to the main page, with no need to go through the Login. If the user already has an account created, it is possible to access the Login page.",
        "The blog page has the latest messages sent by users. In it the user is able to send messages, edit the message already sent and also delete it. There is also a Logout button for the user to disconnect from his account."
      ],
      "techs": ["JavaScript", "CSS - Metodologia BEM", "HTML"],
      "features": [
        "User registration page with 4 fields (username, email, profile picture and password);",
        "Login Page;",
        "Automatic redirection to the blog after registration or login;",
        "Blog page displaying the latest posts sent by active blog users;",
        "Field for creating a new message;",
        "Possibility of editing the message performed by the user;",
        "Possibility to remove user message;",
        "Responsive for all screens."
      ],
      "images": [
        "../../../src/assets/images/projects/blog/Blog-main-page.png",
        "../../../src/assets/images/projects/blog/Blog-register.png",
        "../../../src/assets/images/projects/blog/Blog-login.png"
      ]
    },
    {
      "project-name": "E-commerce single-page",
      "github-link": "https://github.com/guiwustro/e-commerce-single-page",
      "project-url": "https://guiwustro.github.io/e-commerce-single-page/",
      "description": "It is a single-page e-commerce application, which has a showcase with products with add-to-cart buttons, a shopping cart, a filter bar and a search field.",
      "about-project": [
        "The project has a product showcase, which you can add the product to the cart by clicking the Buy button.",
        "The shopping cart is only visible to the user when a product is added to the cart. Within it, the user is able to increase, decrease the quantity of the product through the + and - buttons or remove the product. The customer is automatically calculated cart with each addition, decrease or removal of a product. The number of products in the cart is automatically updated also in the cart icon in the navigation bar.",
        "The project also has a search bar by product and category, and a bar of category filters."
      ],
      "techs": ["JavaScript", "CSS - Metodologia BEM", "HTML"],
      "features": [
        "Showcase with e-commerce products;",
        "Button with the option to add to cart on each e-commerce product;",
        "Functional search field to search by category or product name;",
        "Filter bar by category;",
        "Option to increase, decrease quantity and remove by shopping cart;",
        "Shopping cart total calculation;",
        "Option to remove all products from cart;",
        "Responsive to any screen;"
      ],
      "images": [
        "../../../src/assets/images/projects/ecommerce-js-vanilla/Home-1440px.png",
        "../../../src/assets/images/projects/ecommerce-js-vanilla/Home-1024px-CartInclude.png",
        "../../../src/assets/images/projects/ecommerce-js-vanilla/Home-1024px.png"
      ]
    },
    {
      "project-name": "Oregon Trail",
      "github-link": "https://github.com/guiwustro/oregon-trail-game",
      "project-url": "https://guiwustro.github.io/oregon-trail-game/",
      "description": "Based on the game The Oregon Trail, it's an application in which the user rides his own wagon, chooses how many wagons it will have, and in it he can add three types of travelers. Each traveler has specific actions, which can be to hunt for food, eat and /or cure. Developed using Object Oriented Programming.",
      "about-project": [
        "This application consists of two pages, the first, the user must choose, the number of wagons that the wagon must have and once chosen, the user is redirected to the game page.",
        "On the game page, the user is able to add new travelers to the wagon. An error is thrown if the user does not enter a name for the traveller, enter a name longer than 15 characters or try to add travelers without having spaces in the wagon .",
        "Each type of traveler has its personalized card, with specific actions for each type of traveler.",
        "The application has a specific space where it shows the Status of the wagon, that is, the number of sick travelers, the total food and the remaining spaces."
      ],
      "techs": ["JavaScript", "CSS -Metodologia BEM", "HTML"],
      "features": [
        "Choose the number of wagons (up to 20);",
        "Form for the user to register new travelers;",
        "User notification modes, warning the user in cases of: added traveler has no defined name, has more than 15 characters or there is no more space in the cart;",
        "A showcase containing all added travelers;",
        "Customized card according to the type of traveler added;",
        "Action of eating and hunting for the common traveler;",
        "Action of eating, hunting and transferring food to the Hunter;",
        "Action of eating, hunting and healing another traveler for the Doctor;",
        "Responsive for all screens;",
        "User notification modes in case of food transfer without having enough food, eating sick, among others;",
        "Button to return to the start menu to create another wagon from scratch, choosing a new amount of wagons."
      ],
      "images": [
        "../../../src/assets/images/projects/oregon-trail/Oregon-trail-HomePage.png"
      ]
    }
  ]
}
